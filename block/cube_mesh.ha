use glm;

type _cube_mesh = struct {
	top: [6]glm::v3,
	bottom: [6]glm::v3,
	north: [6]glm::v3,
	east: [6]glm::v3,
	south: [6]glm::v3,
	west: [6]glm::v3,
};

// Cube vertex position mesh separated into six quads.
const cube_mesh = _cube_mesh {
	top = [
		[1.0,	1.0,	1.0],
		[1.0,	1.0,	0.0],
		[0.0,	1.0,	0.0],
		[1.0,	1.0,	1.0],
		[0.0,	1.0,	0.0],
		[0.0,	1.0,	1.0],
	],
	bottom = [
		[0.0,	 0.0,	0.0],
		[1.0,	 0.0,	0.0],
		[1.0,	 0.0,	1.0],
		[0.0,	 0.0,	1.0],
		[0.0,	 0.0,	0.0],
		[1.0,	 0.0,	1.0],
	],
	north = [
		[1.0,	0.0,	 0.0],
		[0.0,	1.0,	 0.0],
		[1.0,	1.0,	 0.0],
		[1.0,	0.0,	 0.0],
		[0.0,	0.0,	 0.0],
		[0.0,	1.0,	 0.0],
	],
	east = [
		[1.0,	1.0,	1.0],
		[1.0,	0.0,	1.0],
		[1.0,	0.0,	0.0],
		[1.0,	1.0,	0.0],
		[1.0,	1.0,	1.0],
		[1.0,	0.0,	0.0],
	],
	west = [
		[0.0,	0.0,	0.0],
		[0.0,	0.0,	1.0],
		[0.0,	1.0,	1.0],
		[0.0,	0.0,	0.0],
		[0.0,	1.0,	1.0],
		[0.0,	1.0,	0.0],
	],
	south = [
		[1.0,	1.0,	1.0],
		[0.0,	1.0,	1.0],
		[1.0,	0.0,	1.0],
		[0.0,	1.0,	1.0],
		[0.0,	0.0,	1.0],
		[1.0,	0.0,	1.0],
	],
};

type _cube_uv = struct {
	top: [6]glm::v2,
	bottom: [6]glm::v2,
	north: [6]glm::v2,
	east: [6]glm::v2,
	south: [6]glm::v2,
	west: [6]glm::v2,
};

// Cube vertex UV mesh separated into six quads.
const cube_uv = _cube_uv {
	top = [
		[1.0 / 16.0,	1.0 / 16.0],
		[0.0 / 16.0,	1.0 / 16.0],
		[0.0 / 16.0,	0.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
		[0.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	1.0 / 16.0],
	],
	bottom = [
		[0.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
		[0.0 / 16.0,	1.0 / 16.0],
		[0.0 / 16.0,	0.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
	],
	north = [
		[0.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	0.0 / 16.0],
	],
	east = [
		[0.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	0.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
	],
	west = [
		[0.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	0.0 / 16.0],
	],
	south = [
		[1.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	0.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
		[0.0 / 16.0,	0.0 / 16.0],
		[0.0 / 16.0,	1.0 / 16.0],
		[1.0 / 16.0,	1.0 / 16.0],
	],
};
